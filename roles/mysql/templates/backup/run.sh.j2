#!/bin/bash

# cfg
KEEP_DAY_HOUR="12" # keep the backup from this hour as the daily backup
KEEP_MONTH_DAY="01" # keep the backup from this day as the monthly backup
KEEP_DAYS="{{ backups_days|default(30) }}" # keep as many daily backups
KEEP_HOURS="{{ backups_hour|default(48) }}" # keep as many hourly backups
KEEP_MONTHS="{{ backup_months|default(24) }}" # keep as many monthly backups
BACKUP_DIR="{{ backup_access_dir }}"
LOG="{{ mysql_backup.log }}"
DBA="-uroot" # host/auth params
TMP_DIR="/home/{{ mysql_backup.user }}/tmp"

# vars
HOSTNAME=$(hostname)
CMD_DATABASES="mysql ${DBA} -N -e 'show databases'"
DBS=$(eval $CMD_DATABASES)
DATE=$(date +"%Y-%m-%d")
TIME=$(date +"%Y-%m-%d-%H")
DAY=$(date +"%d")
HOUR=$(date +"%H")

cd $BACKUP_DIR

echo "" >> $LOG
echo "starting backup at $(date +'%Y-%m-%d %H:%M:%S')" >> $LOG

for DB in $DBS
do
   DUMP_FILE="${TMP_DIR}/${DB}-dump.sql"

   # if ignore.cfg exists skip each db with matching name in file
   if [ -f ignore.cfg ]
   then
       if grep -Fxq "$DB" ignore.cfg
       then
           continue
       fi
   fi

   # create required dirs
   if [ ! -d $DB/daily ]
   then
      mkdir -p $DB/daily
   fi
   if [ ! -d $DB/hourly ]
   then
      mkdir -p $DB/hourly
   fi
   if [ ! -d $DB/monthly ]
   then
      mkdir -p $DB/monthly
   fi

   # dump structure
   dump_cmd="mysqldump ${DBA} -d -q --single-transaction $DB > $DUMP_FILE"
   eval $dump_cmd

   # dump data
   dump_cmd="mysqldump ${DBA} --complete-insert --no-create-info -q --single-transaction --lock-tables=false"
   if [ -f $DB/ignore.cfg ]
   then
      while read table; do
         dump_cmd="$dump_cmd --ignore-table=${DB}.${table}"
      done <$DB/ignore.cfg
   fi
   dump_cmd="$dump_cmd $DB >> $DUMP_FILE"
   eval $dump_cmd

   # check if backup is complete
   check_complete=$(grep "Dump completed on" $DUMP_FILE | wc -l)

   if [ "$check_complete" != "2" ]
   then
      rm $DUMP_FILE
      echo "ERROR: backup of $DB incomplete" >> $LOG
      # skip any other steps like rotation if this fails
      continue
   fi
   echo "NOTE: backup of $DB completed" >> $LOG

   # remove dump completed line from dump to compare them
   sed -i '/Dump completed on/d' $DUMP_FILE

   # compress
   gzip -f $DUMP_FILE
   size=$(du -k $DUMP_FILE.gz | cut -f1)
   mv $DUMP_FILE.gz $DB/hourly/$TIME.sql.gz

   echo "NOTE: backup of $DB stored $size kbytes under $DB/hourly/${TIME}.sql.gz" >> $LOG

   # begin rotation and cleanup

   # hardlink daily backup
   if [ "$KEEP_DAY_HOUR" == "$HOUR" ]
   then
       ln -f $DB/hourly/$TIME.sql.gz $DB/daily/$DATE.sql.gz

       # hardlink monthly backup
       if [ "$KEEP_MONTH_DAY" == "$DAY" ]
       then
           ln -f $DB/hourly/$TIME.sql.gz $DB/monthly/$DATE.sql.gz
       fi
   fi

   # cleanup rotation

   cd $BACKUP_DIR/$DB/hourly/ && ls | head -n -$KEEP_HOURS | xargs -r rm
   cd $BACKUP_DIR/$DB/monthly/ && ls | head -n -$KEEP_DAYS | xargs -r rm
   cd $BACKUP_DIR/$DB/daily/ && ls | head -n -$KEEP_MONTHS | xargs -r rm
   cd $BACKUP_DIR
done

echo "completed backup at $(date +'%Y-%m-%d %H:%M:%S')" >> $LOG