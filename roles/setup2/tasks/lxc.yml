---

# get container ready to be used directly via ssh bastion by ansible

- name: create barebone container
  command: lxc-create --name {{ container.hostname }} --template download -- --release jessie --arch amd64 --dist debian
  args:
    chdir: ~/
    creates: "~/.local/share/lxc/{{ container.hostname }}/config"
  register: container_created

- name: container config
  template: dest=~/.local/share/lxc/{{ container.hostname }}/config src=lxc.config.j2

# preparing some container files from outside container as root
# mostly getting container network ready

- name: ipv4 precedence over ipv6
  lineinfile: dest=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/gai.conf line="precedence ::ffff:0:0/96  100"
  become: yes
  become_user: root

- name: network interfaces
  template: dest=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/network/interfaces src=network.interfaces.j2
  become: yes
  become_user: root

- name: iptables dir
  file: path=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/iptables state=directory owner=100000 group=100000 mode=0644
  become: yes
  become_user: root

- name: empty iptables rules v4
  become: yes
  become_user: root
  file: path=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/iptables/rules.v4.source state=touch owner=100000 group=100000

- name: empty iptables rules v6
  become: yes
  become_user: root
  file: path=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/iptables/rules.v6.source state=touch owner=100000 group=100000

- name: resolve.conf
  template: dest=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/resolv.conf src=resolv.conf.j2
  become: yes
  become_user: root

- name: apt/sources.list
  template: dest=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/etc/apt/sources.list src=apt.sources.list.j2
  become: yes
  become_user: root

# restart container

- name: restart container 1/2
  command: lxc-stop -k -n {{ container.hostname }}
  args:
    chdir: ~/
  ignore_errors: yes

- name: restart container 2/2
  command: lxc-start -d -n {{ container.hostname }}
  args:
    chdir: ~/

# attach and run commands

- name: apt-get update via lxc-attach
  command: lxc-attach -n {{ container.hostname }} -- apt-get update
  args:
    chdir: ~/

- name: install ssh server and ansible requirements
  command: lxc-attach -n {{ container.hostname }} -- apt-get install -y openssh-server python sudo
  args:
    chdir: ~/

- name: update systemd from backports
  command: lxc-attach -n {{ container.hostname }} -- apt-get install -y systemd -t jessie-backports
  args:
    chdir: ~/

# add admin users to each container and set public key

- name: add config user to container
  command: lxc-attach -n {{ container.hostname }} -- useradd -p {{ config_user_password }} -s /bin/bash -m {{ config_user_name }}
  args:
    chdir: ~/
    creates: ~/.local/share/lxc/{{ container.hostname }}/rootfs/home/{{ config_user_name }}

- name: sudo for config user
  command: lxc-attach -n {{ container.hostname }} -- usermod -a -G sudo {{ config_user_name }}
  args:
    chdir: ~/

- name: add admin users public keys to container
  authorized_key: user="{{ config_user_name }}" key="{{ lookup('file', config_user_public_key_file) }}" path="/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/home/{{ config_user_name }}/.ssh/authorized_keys"
  become: yes
  become_user: root

- name: ownership of .ssh/authorized_keys
  file: path=/home/{{ container_user }}/.local/share/lxc/{{ container.hostname }}/rootfs/home/{{ config_user_name }}/.ssh owner=100000 group=100000 mode=0755 recurse=yes
  become: yes
  become_user: root
